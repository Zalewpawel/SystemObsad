// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sedziowanie.Data;

#nullable disable

namespace Sedziowanie.Migrations
{
    [DbContext(typeof(DBObsadyContext))]
    partial class DBObsadyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sedziowanie.Models.Mecz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gosc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gospodarz")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumerMeczu")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("RozgrywkiId")
                        .HasColumnType("int");

                    b.Property<int>("SedziaIIId")
                        .HasColumnType("int");

                    b.Property<int>("SedziaIId")
                        .HasColumnType("int");

                    b.Property<int>("SedziaSekretarzId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RozgrywkiId");

                    b.HasIndex("SedziaIIId");

                    b.HasIndex("SedziaIId");

                    b.HasIndex("SedziaSekretarzId");

                    b.ToTable("Mecze");
                });

            modelBuilder.Entity("Sedziowanie.Models.Niedyspozycja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Koniec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Poczatek")
                        .HasColumnType("datetime2");

                    b.Property<int>("SedziaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SedziaId");

                    b.ToTable("Niedyspozycje");
                });

            modelBuilder.Entity("Sedziowanie.Models.Rozgrywki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Rozgrywki");
                });

            modelBuilder.Entity("Sedziowanie.Models.Sedzia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Klasa")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Sedziowie");
                });

            modelBuilder.Entity("Sedziowanie.Models.Mecz", b =>
                {
                    b.HasOne("Sedziowanie.Models.Rozgrywki", "Rozgrywki")
                        .WithMany("Mecze")
                        .HasForeignKey("RozgrywkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sedziowanie.Models.Sedzia", "SedziaII")
                        .WithMany("MeczeJakoSedzia2")
                        .HasForeignKey("SedziaIIId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sedziowanie.Models.Sedzia", "SedziaI")
                        .WithMany("MeczeJakoSedzia1")
                        .HasForeignKey("SedziaIId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sedziowanie.Models.Sedzia", "SedziaSekretarz")
                        .WithMany("MeczeJakoSedziaSekretarz")
                        .HasForeignKey("SedziaSekretarzId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rozgrywki");

                    b.Navigation("SedziaI");

                    b.Navigation("SedziaII");

                    b.Navigation("SedziaSekretarz");
                });

            modelBuilder.Entity("Sedziowanie.Models.Niedyspozycja", b =>
                {
                    b.HasOne("Sedziowanie.Models.Sedzia", "Sedzia")
                        .WithMany("Niedyspozycje")
                        .HasForeignKey("SedziaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sedzia");
                });

            modelBuilder.Entity("Sedziowanie.Models.Rozgrywki", b =>
                {
                    b.Navigation("Mecze");
                });

            modelBuilder.Entity("Sedziowanie.Models.Sedzia", b =>
                {
                    b.Navigation("MeczeJakoSedzia1");

                    b.Navigation("MeczeJakoSedzia2");

                    b.Navigation("MeczeJakoSedziaSekretarz");

                    b.Navigation("Niedyspozycje");
                });
#pragma warning restore 612, 618
        }
    }
}
